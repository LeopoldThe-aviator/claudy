- content_for :page_header do
  = render "layouts/components/page_header",
           title: l(@date, format: :month_year).capitalize,
           links: [ button_to_previous_month(@date), button_to_next_month(@date) ]

= SimpleCalendar::DashboardCalendar.new(self, { \
    today: @date \
  }).render do |date|
  / - if @grouped_events[date]
    - @grouped_events[date].sort_by {|e| [e.starts_at, e.event_category_id] }.each do |event|
      .event.event-calendar-item(data-event-path="#{event_path(event)}" data-action="click->calendar#redirectToEvent")
        .grid-x
          .cell.shrink
            .event__border.event__border--tiny(style="background-color: #{event.event_category.color}")
          .cell.auto
            .event__content
              .grid-x
                .cell.auto
                  - if event.starts_at.hour > 0
                    .event-time
                      => l(event.starts_at, format: :only_time)
                  .event-name
                    = link_to event.name,
                              event_path(event)
                .cell.shrink
                  .spacer__width--dot5
                  = ellipsis_for("event-#{event.id}-menu")

  - if @grouped_space_reservations[date]
    - @grouped_space_reservations[date].sort_by {|sr| sr.start_time }.group_by { |sr| sr.space_booking.id }.each do |grouped_space_reservations|
      - space_booking = SpaceBookingDecorator.new(grouped_space_reservations.last.first.space_booking)
      div(class="flex mt-2 py-1 px-2 #{space_booking.calendar_class}")
        .block
          div
            strong 
              = link_to space_booking.decorate.name.html_safe, 
                        space_booking_path(space_booking), 
                        class: "text-blue-700 hover:text-blue-900 focus:text-blue-900"
            - if space_booking.event.presence
              .text-gray-500.leading-none.mb-2.font-semibold = space_booking.event.name_with_color
            - if space_booking.group_name.present?
              .text-gray-500.leading-none.mb-2 = space_booking.group_name

          .grid.grid-cols-3.gap-1
            - grouped_space_reservations.last.each do |space_reservation|
              = space_badge(space_reservation.space)

          .block.text-gray-500
            = space_booking.duration

  - if @grouped_reservations[date]
    - @grouped_reservations[date].sort_by {|r| r.start_time }.group_by { |r| r.booking.id }.each do |grouped_reservations|
      - reservation = grouped_reservations.last.first
      - booking = BookingDecorator.new(reservation.booking)

      .popover.absolute.z-10.invisible.inline-block.w-64.text-sm.font-light.text-gray-500.transition-opacity.duration-300.bg-white.border.border-gray-200.rounded-lg.shadow-sm.opacity-0[id="popover-reservation-#{reservation.id}" data-popover role="tooltip"]
        .p-3
          .flex.items-center.justify-between.mb-2
            .text-sm.font-semibold.leading-none.text-gray-900
              = link_to booking.decorate.name.html_safe, 
                        booking_path(booking),
                        class: "text-blue-700 hover:text-blue-900 focus:text-blue-900"
              - if booking.group_name.present?
                .block.text-gray-500.leading-none.mt-1 = booking.group_name
            div
              = link_to "DÃ©tails", 
                        booking_path(booking),
                        class: "text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-xs px-3 py-1.5 focus:outline-none"
          - if booking.object.phone.present?
            p.mb-2.text-sm.font-normal
              | TÃ©l: #{booking.phone}
          - if booking.estimated_arrival.present?
            p.mb-2.text-sm.font-light
              | Heure d'arrivÃ©e: #{booking.estimated_arrival}
          - if booking.departure_time.present?
            p.mb-2.text-sm.font-light
              | Heure de dÃ©part: #{booking.departure_time}
          - if booking.canceled?
            .mb-2.text-sm.font-semibold
              | Cette rÃ©servation est annulÃ©e
          - if booking.confirmed?
            .mb-2
              = booking.payment_status
          ul.flex.text-base.font-light
            - if booking.object.adults > 0
              li.mr-2
                span.font-semibold.text-gray-900
                  | #{booking.adults}x
                span.ml-1
                  | ðŸ§‘
            - if booking.object.children > 0
              li.mr-2
                span.font-semibold.text-gray-900
                  | #{booking.children}x
                span.ml-1
                  | ðŸ‘§
            - if booking.object.babies > 0
              li.mr-2
                span.font-semibold.text-gray-900
                  | #{booking.babies}x
                span.ml-1
                  | ðŸ‘¶
          .mt-2.text-base
            = booking.options_emojis
        div[data-popper-arrow]

      div(class="relative flex mt-2 py-1 px-2 hover:cursor-pointer hover:shadow-xl #{booking.calendar_class}")
        .block
          div
            strong 
              = link_to booking.decorate.name.html_safe, 
                        booking_path(booking), 
                        class: "text-blue-700 hover:text-blue-900 focus:text-blue-900"
            - if booking.group_name.present?
              .text-gray-500.leading-none.mb-2 = booking.group_name

          - if !booking.lodging.nil?
            = booking.lodging_badge
          - else
            .grid.grid-cols-3.gap-1
              - grouped_reservations.last.each do |reservation|
                = room_badge(reservation.room)
        .absolute.top-0.left-0.w-full.h-full(data-popover-target="popover-reservation-#{reservation.id}" data-popover-trigger="click")
